name: Dispatch Deploys

on:
  push:
    branches: [main, qa, dev]
    paths:
      - 'package/*/**'

permissions:
  contents: write
  actions: write

jobs:
  detect-and-dispatch:
    runs-on: ubuntu-latest
    steps:

      - name: import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          role: publishing-role
          path: gh-actions
          secrets: |
            operations-kv/data/ci/github readPackagesToken | READ_TOKEN ;
            operations-kv/data/ci/slack devopsNotifications | SLACK_DEVOPS_NOTIFICATIONS ;
            operations-kv/data/ci/slack releasesWebhook | SLACK_RELEASES_WEBHOOK ;

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed app folders
        id: changed
        uses: tj-actions/changed-files@v46
        with:
          dir_names: true
          dir_names_max_depth: 2
          files: |
            package/**

      - name: Debug changed outputs
        shell: bash
        run: |
          echo "ðŸ”Ž Changed app directories: ${{ steps.changed.outputs.all_modified_files }}"

      - name: Get App Names
        id: normalize
        shell: bash
        run: |
          changed_dirs="${{ steps.changed.outputs.all_modified_files }}"

          if [ -z "$changed_dirs" ]; then
            echo "CHANGED_APPS=" >> $GITHUB_ENV
            exit 0
          fi

          # Remove 'package/' prefix
          apps=$(echo "$changed_dirs" | sed 's|package/||g')

          echo "Normalized apps: $apps"
          echo "CHANGED_APPS=$apps" >> $GITHUB_ENV

      - name: Debug changed apps
        shell: bash
        run: |
          echo "ðŸ”Ž All changed apps: ${{ env.CHANGED_APPS }}"

      - name: Set environment context
        shell: bash
        run: |
          BRANCH=${GITHUB_REF##*/}
          echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV
          if [[ "$BRANCH" == "main" ]]; then
            echo "ENV_NAME=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=237041882429" >> $GITHUB_ENV
          else
            echo "ENV_NAME=$BRANCH" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=013360300799" >> $GITHUB_ENV
          fi

      - name: Dispatch deploy workflow for each app
        shell: bash
        run: |
          set -x
          export GH_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          IFS=',' read -ra APPS <<< "$CHANGED_APPS"

          if [ -z "${APPS[*]}" ]; then
            echo "âœ… No apps changed, skipping deploy."
            exit 0
          fi

          for app_name in "${APPS[@]}"; do
            echo "ðŸš€ Triggering deploy for $app_name"

            gh workflow run deploy.yml \
              --ref "${GITHUB_REF_NAME}" \
              -f app-name="$app_name" \
              -f env-name="${ENV_NAME}" \
              -f aws-account-id="${AWS_ACCOUNT_ID}" \
              -f s3-bucket="us-east-1-${ENV_NAME}-custom-ui"
          done
        env:
          CHANGED_APPS: ${{ env.CHANGED_APPS }}
          ENV_NAME: ${{ env.ENV_NAME }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
