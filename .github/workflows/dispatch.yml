name: Dispatch Deploys

on:
  push:
    branches: [main, qa, dev]
    paths:
      - 'package/*/**'

permissions:
  contents: write
  actions: write

jobs:
  detect-and-dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed app folders
        id: changed
        uses: tj-actions/changed-files@v46
        with:
          dir_names: true
          dir_names_max_depth: 2
          files: |
            package/**

      - name: Debug changed outputs
        run: |
          echo "ðŸ”Ž Changed app directories: ${{ steps.changed.outputs.all_changed_files }}"

      - name: Get App Names
        id: normalize
        run: |
          changed_dirs="${{ steps.changed.outputs.all_changed_files }}"

          if [ -z "$changed_dirs" ]; then
            echo "CHANGED_APPS=" >> $GITHUB_ENV
            exit 0
          fi

          # Remove 'package/' prefix
          apps=$(echo "$changed_dirs" | sed 's|package/||g')

          echo "Normalized apps: $apps"
          echo "CHANGED_APPS=$apps" >> $GITHUB_ENV

      - name: Debug changed outputs
        run: |
          echo "ðŸ”Ž All changed apps: ${{ env.CHANGED_APPS }}"

      - name: Set environment context
        run: |
          BRANCH=${GITHUB_REF##*/}
          echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV
          if [[ "$BRANCH" == "main" ]]; then
            echo "ENV_NAME=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=237041882429" >> $GITHUB_ENV
          else
            echo "ENV_NAME=$BRANCH" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=013360300799" >> $GITHUB_ENV
          fi

      - name: Dispatch deploy event for each app
        uses: actions/github-script@v7
        with:
          script: |
            const apps = process.env.CHANGED_APPS.split(',');
            const envName = process.env.ENV_NAME;
            const awsAccountId = process.env.AWS_ACCOUNT_ID;
            const ref = process.env.TARGET_REF;
            
            for (const appName of apps) {
              console.log(`ðŸš€ Dispatching deploy for app: ${appName}`);
            
              await github.rest.repos.createDispatchEvent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                event_type: "deploy-app",
                client_payload: {
                  app_name: appName,
                  env_name: envName,
                  aws_account_id: awsAccountId,
                  s3_bucket: `us-east-1-${envName}-custom-ui`,
                  ref: ref
                }
              });
            }
        env:
          CHANGED_APPS: ${{ env.CHANGED_APPS }}
          ENV_NAME: ${{ env.ENV_NAME }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          TARGET_REF: ${{ env.TARGET_REF }}

